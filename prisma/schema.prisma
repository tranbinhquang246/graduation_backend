// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model Users {
  id				String			@id() @default(uuid()) @map("user_id")
  email				String			@unique
  password			String
  userRole			String 
  createdAt			DateTime		@default(now()) @map("create_at")
  updatedAt			DateTime		@updatedAt @map("update_at")
  userInfor			User_Infor?
  Cart				Cart?
  addressDeliverys	Address_Delivery[]
  orders			Order[]
  evaluations		Evaluation[]
  favorites			Favorite[]
}

model Products {
  id			Int			@id @default(autoincrement())
  name			String
  descriptions	String?
  quantity		Int
  price			Int
  salePrice		Int
  color			String
  material		String
  design		String
  type			String
  brand			String
  mainImg		String?
  createdAt		DateTime		@default(now()) @map("create_at")
  updatedAt		DateTime		@updatedAt @map("update_at")
  cartDetail	CartDetail[]
  subImg		SubImage[]
  evaluation	Evaluation[]
  favorites		Favorite[]
  orderDetail	OrderDetail[]
  
}

model User_Infor{
  user			Users		@relation(fields: [userId], references: [id], onDelete: Cascade)
  userId		String		@unique
  avatar		String?
  firstName		String?		@map("first_name")
  lastName		String?		@map("last_name")
}

model Address_Delivery{
  id		Int			@id @default(autoincrement())
  user		Users		@relation(fields: [userId], references: [id], onDelete: Cascade)
  userId	String
  province	String
  district	String
  commune	String
  address 	String
}

model Cart{
  id			Int			@id @default(autoincrement())
  user			Users		@relation(fields: [userId], references: [id], onDelete: Cascade)
  userId		String		@unique
  cartDetail	CartDetail[]
}

model CartDetail{
  id				Int			@id @default(autoincrement())
  product			Products	@relation(fields: [productId], references: [id], onDelete: Cascade)
  productId			Int			
  cart				Cart		@relation(fields: [cartId], references: [id], onDelete: Cascade)
  cartId			Int
  quantity			Int
}

model Order {
  id				Int			@id @default(autoincrement())
  user				Users		@relation(fields: [userId], references: [id], onDelete: SetDefault)
  userId			String		@default("anonymous")
  dateOrder			DateTime	@default(now()) @map("date_order")
  totalOrder		Int
  statusOrder 		String
  orderDetail		OrderDetail[]
}

model Evaluation {
  id				Int			@id @default(autoincrement())
  user				Users		@relation(fields: [userId], references: [id], onDelete: SetDefault)
  userId			String		@default("anonymous")
  product			Products	@relation(fields: [productId], references: [id], onDelete: Cascade)
  productId			Int	
  rating			Float
  comment			String
  createdAt			DateTime		@default(now()) @map("create_at")
  updatedAt			DateTime		@updatedAt @map("update_at")
}

model Favorite {
  id				Int			@id @default(autoincrement())
  user				Users		@relation(fields: [userId], references: [id], onDelete: Cascade)
  userId			String
  product			Products	@relation(fields: [productId], references: [id], onDelete: Cascade)
  productId			Int
}

model OrderDetail {
  id				Int			@id @default(autoincrement())
  product			Products	@relation(fields: [productId], references: [id], onDelete: Cascade)
  productId			Int
  order				Order		@relation(fields: [orderId], references: [id], onDelete: Cascade)
  orderId			Int
  quantity			Int
  price				Int
}

model SubImage {
  id				Int			@id @default(autoincrement())
  product			Products	@relation(fields: [productId], references: [id], onDelete: Cascade)
  productId			Int
  link				String?
}

model LookupType {
  id				Int			@id @default(autoincrement())
  name 				String
  createdAt			DateTime		@default(now()) @map("create_at")
  updatedAt			DateTime		@updatedAt @map("update_at")
}

model LookupDesign {
  id				Int				@id @default(autoincrement())
  name				String
  createdAt			DateTime		@default(now()) @map("create_at")
  updatedAt			DateTime		@updatedAt @map("update_at")
}

model LookupBrand {
  id				Int				@id @default(autoincrement())
  name				String
  createdAt			DateTime		@default(now()) @map("create_at")
  updatedAt			DateTime		@updatedAt @map("update_at")
}

model LookupMaterial {
  id				Int				@id @default(autoincrement())
  name				String
  createdAt			DateTime		@default(now()) @map("create_at")
  updatedAt			DateTime		@updatedAt @map("update_at")
}

model LookupColor {
  id				Int				@id @default(autoincrement())
  name				String
  createdAt			DateTime		@default(now()) @map("create_at")
  updatedAt			DateTime		@updatedAt @map("update_at")
}
